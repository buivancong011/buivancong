#!/bin/bash
set -euo pipefail

# ========= CONFIG CỨNG (1 IP, 1 mạng, 1 container / dịch vụ) =========
# Tokens/creds bạn đã cung cấp
TOKEN='/PfkwR8qQMfbsCMrSaaDhsX96E9w2PeHH2bcGeyFBno='          # Traffmonetizer
EARNFM_TOKEN='50f04bbe-94d9-4f6a-82b9-b40016bd4bbb'           # EarnFM
UR_USER='nguyenvinhcao123@gmail.com'                          # URNetwork
UR_PASS='CAOcao123CAO@'

# Bitping – điền email/pass nếu muốn auto-login không tương tác
BITPING_EMAIL='nguyenvinhcao123@gmail.com'    # ví dụ: 'you@example.com'
BITPING_PASSWORD='nguyenvinhcao123@gmail.com' # ví dụ: 'your_password'
BITPING_MFA=''      # nếu có 2FA (tùy chọn, có thể để trống)
BITPING_VOL="bitpingd-volume"

# Tuỳ chọn dọn sạch Docker trước khi khởi tạo
PURGE_CONTAINERS=true
PURGE_IMAGES=false   # để false cho nhanh; bật true nếu muốn xoá sạch images

need_cmd(){ command -v "$1" >/dev/null 2>&1; }

# ========= Chọn image Traffmonetizer theo kiến trúc =========
arch="$(uname -m)"
case "$arch" in
  aarch64|arm64) TM_IMAGE="traffmonetizer/cli_v2:arm64v8" ;;
  x86_64|amd64)  TM_IMAGE="traffmonetizer/cli_v2:latest"  ;;
  *)             TM_IMAGE="traffmonetizer/cli_v2:latest"  ;;
esac

# UR image theo kiến trúc
UR_IMAGE_AMD64="ghcr.io/techroy23/docker-urnetwork:latest"
UR_IMAGE_ARM64="techroy23/docker-urnetwork:latest"
if [[ "$arch" == "aarch64" || "$arch" == "arm64" ]]; then
  UR_PLATFORM="--platform linux/arm64"
  UR_IMAGE="$UR_IMAGE_ARM64"
else
  UR_PLATFORM="--platform linux/amd64"
  UR_IMAGE="$UR_IMAGE_AMD64"
fi

# ========= Cài Docker nếu thiếu =========
install_pkgs(){
  if need_cmd yum; then sudo yum -y update || true; sudo yum -y install "$@" || true
  elif need_cmd dnf; then sudo dnf -y update || true; sudo dnf -y install "$@" || true
  elif need_cmd apt-get; then sudo apt-get update -y || true; sudo apt-get install -y "$@" || true
  else return 1; fi
}

if ! need_cmd docker; then
  echo "[INFO] Cài Docker..."
  install_pkgs docker docker.io || true
  sudo systemctl enable docker
  sudo systemctl start docker
  echo "[INFO] Docker đã sẵn sàng. Chạy lại script."
  exit 0
fi

# ========= Dọn Docker (tuỳ chọn) =========
if [[ "$PURGE_CONTAINERS" == "true" ]] && [[ "$(docker ps -aq | wc -l)" -gt 0 ]]; then
  echo "[WARN] Xoá toàn bộ containers..."
  docker rm -f $(docker ps -aq) || true
fi
if [[ "$PURGE_IMAGES" == "true" ]] && [[ "$(docker images -q | wc -l)" -gt 0 ]]; then
  echo "[WARN] Xoá toàn bộ images..."
  docker rmi -f $(docker images -q) || true
fi

# ========= Lấy IP/interface (log cho tiện) =========
DEV="$(ip route show default 2>/dev/null | awk '{for(i=1;i<=NF;i++) if($i=="dev"){print $(i+1); exit}}' || true)"
IP="$(ip -4 addr show dev "$DEV" 2>/dev/null | awk '/inet /{print $2}' | head -n1 | cut -d/ -f1 || true)"
echo "[INFO] Interface: ${DEV:-n/a} | IP: ${IP:-n/a}"

# ========= Pull images =========
echo "[INFO] Pull images..."
docker pull "${TM_IMAGE}" || true
docker pull earnfm/earnfm-client:latest || true
docker pull "$UR_IMAGE" || true
docker pull bitping/bitpingd:latest || true   # Bitping node (official)  :contentReference[oaicite:1]{index=1}

# ========= Run Traffmonetizer (1 container) =========
echo "[INFO] Run Traffmonetizer..."
docker run -d --restart always --name tm1 "${TM_IMAGE}" start accept --token "${TOKEN}"

# ========= Run EarnFM (1 container) =========
echo "[INFO] Run EarnFM..."
docker run -d --restart=always -e EARNFM_TOKEN="${EARNFM_TOKEN}" --name earnfm1 earnfm/earnfm-client:latest

# ========= Run URNetwork (1 container, KHÔNG map port) =========
echo "[INFO] Run URNetwork..."
UR_VOL="vnstat_data_ur"
docker volume create "$UR_VOL" >/dev/null 2>&1 || true
docker run -d $UR_PLATFORM \
  --name "ur1" \
  --restart "always" \
  --pull "always" \
  --privileged \
  --log-driver json-file \
  --log-opt max-size=5m \
  --log-opt max-file=3 \
  -e USER_AUTH="${UR_USER}" \
  -e PASSWORD="${UR_PASS}" \
  -e ENABLE_IP_CHECKER="false" \
  -v "${UR_VOL}:/var/lib/vnstat" \
  "$UR_IMAGE"

# ========= Run Bitping (1 container) =========
# Tạo volume để lưu cred/state của bitpingd
docker volume create "${BITPING_VOL}" >/dev/null 2>&1 || true

if [[ -n "${BITPING_EMAIL}" && -n "${BITPING_PASSWORD}" ]]; then
  echo "[INFO] Bitping: login non-interactive bằng ENV..."
  # Cách 1: Login qua ENV, mount volume, sau đó chạy node (theo docs)  :contentReference[oaicite:2]{index=2}
  docker run --rm -it \
    -e BITPING_EMAIL="${BITPING_EMAIL}" \
    -e BITPING_PASSWORD="${BITPING_PASSWORD}" \
    -e BITPING_MFA="${BITPING_MFA}" \
    --mount type=volume,source="${BITPING_VOL}",target=/root/.bitpingd \
    bitping/bitpingd:latest true >/dev/null 2>&1 || true

  echo "[INFO] Run Bitping node (detached)..."
  docker run -d \
    --name bitping \
    --restart=always \
    --mount type=volume,source="${BITPING_VOL}",target=/root/.bitpingd \
    bitping/bitpingd:latest
else
  echo "[WARN] Chưa cấu hình BITPING_EMAIL/BITPING_PASSWORD -> bỏ qua auto-login."
  echo "       Bạn có thể login thủ công bằng (1 trong 2 cách sau):"
  echo "   a) Tương tác:"
  echo "      docker run -it --mount type=volume,source=${BITPING_VOL},target=/root/.bitpingd bitping/bitpingd:latest"
  echo "      # trong shell bitpingd, chạy:  bitpingd login   (rồi exit)"
  echo "   b) Không tương tác (CLI login):"
  echo "      docker run --rm -it --mount type=volume,source=${BITPING_VOL},target=/root/.bitpingd \\"
  echo "        --entrypoint /app/bitpingd bitping/bitpingd:latest login --email \"you@example.com\" --password \"your_pass\""
  echo "   Sau đó start node:"
  echo "      docker run -d --name bitping --restart=always --mount type=volume,source=${BITPING_VOL},target=/root/.bitpingd bitping/bitpingd:latest"
  # Không tự chạy khi thiếu cred để tránh container loop
fi

# ========= Summary =========
echo ""
echo "================= DONE (1 IP, 1 network, no SOCKS5, + Bitping) ================="
echo "IP: ${IP:-n/a} | IF: ${DEV:-n/a}"
echo ""
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
echo "==============================================================================="
