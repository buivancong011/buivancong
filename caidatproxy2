#!/bin/bash
set -Eeuo pipefail

# ===================== CONFIG =====================
# Khai báo upstream proxy dạng URI. Có thể trộn nhiều loại:
# - HTTP(S):  http://user:pass@host:port
# - SOCKS5:   socks5://user:pass@host:port
# - Shadowsocks: ss://method:password@host:port
# - VMess/Trojan/VLESS/...: để glider -forward tương ứng (xem docs glider)
UPSTREAMS=(
"http://user13181:1758906789@103.82.25.188:13181"
"http://user12289:1758861014@103.82.25.188:12289"
"http://user43410:1758357055@103.82.26.78:43410"
"http://user14951:1757051102@103.82.27.148:14951"
"http://user34076:1758477705@103.82.25.188:34076"
"http://user25251:1757769786@103.82.27.148:25251"
"http://user19033:1757898983@103.82.27.148:19033"
"http://user27196:1757322636@103.82.26.173:27196"
"http://user18315:1758772738@103.82.27.148:18315"
"http://user44644:1757921403@103.82.26.78:44644"
"http://user46696:1757555125@103.82.27.148:46696"
"http://user37840:1756884697@103.82.25.9:37840"
"http://user12196:1758123046@103.82.27.148:12196"
"http://user28537:1758906039@103.82.25.188:28537"
"http://user36778:1756866615@103.82.25.9:36778"
"http://user56871:1757555110@103.82.26.78:56871"
"http://user47056:1757322005@103.82.27.148:47056"
"http://user20472:1756785620@103.82.25.9:20472"
"http://user12735:1758123031@103.82.27.148:12735"
"http://user28454:1757898908@103.82.27.148:28454"
"http://user25002:1757143926@103.82.26.173:25002"
"http://user35213:1756884966@103.82.25.9:35213"
"http://user15349:1757144001@103.82.27.148:15349"
"http://user13080:1758123031@103.82.27.148:13080"
"http://user22035:1758163646@103.82.25.188:22035"
"http://user25796:1757082844@103.82.26.173:25796"
"http://user26235:1758189488@103.82.25.199:26235"
"http://user28114:1757143941@103.82.26.173:28114"
"http://user28507:1758907014@103.82.25.188:28507"
"http://user20419:1759040270@103.82.26.78:20419"
"http://user37962:1757082949@103.82.25.9:37962"
"http://user19654:1759040224@103.82.26.78:19654"
"http://user34683:1756884801@103.82.25.9:34683"
"http://user59641:1757382095@103.82.26.78:59641"
"http://user32789:1758123031@103.82.27.148:32789"
"http://user28983:1757082934@103.82.25.9:28983"
"http://user16901:1757545249@103.82.27.99:16901"
"http://user13465:1756577111@103.82.25.188:13465"
"http://user37417:1756884651@103.82.25.9:37417"
"http://user15718:1758072607@103.82.27.99:15718"
"http://user37972:1757082949@103.82.25.9:37972"
"http://user54573:1757083010@103.82.26.78:54573"
"http://user16174:1757818876@103.82.27.99:16174"
"http://user33365:1757081748@103.82.26.78:33365"
"http://user57748:1757769786@103.82.27.148:57748"
"http://user17435:1758072607@103.82.27.99:17435"
"http://user20578:1759040270@103.82.26.78:20578"
"http://user25597:1756577156@103.82.25.188:25597"
"http://user34602:1756884666@103.82.25.9:34602"
"http://user22093:1758477780@103.82.25.188:22093"
"http://user23231:1758163586@103.82.26.78:23231"
"http://user20538:1758177032@103.82.25.199:20538"
"http://user28303:1757303320@103.82.26.173:28303"
"http://user26486:1757143911@103.82.26.173:26486"
"http://user20967:1758880841@103.82.25.188:20967"

)


# Cổng SOCKS5 lắng nghe trên host cho từng tuyến (tuyến i dùng START_SOCKS+i)
START_SOCKS=1080

# Tên base cho container theo tuyến
GLIDER_NAME_BASE="glider"
TUN_NAME_BASE="tun"
DOH_NAME_BASE="doh"

# Phiên bản image
IMG_GLIDER="nadoo/glider:latest"
IMG_TUN="xjasonlyu/tun2socks:v2.6.0"
IMG_DOH="cloudflare/cloudflared:latest"

# Log level cho tun2socks
TUN_LOGLEVEL="info"   # debug|info|warn|error

# MTU tuỳ tuyến (để trống để mặc định). Ví dụ 1400 nếu gặp timeouts:
TUN_MTU=""            # ví dụ: "1400"

# ===================== PRECHECK =====================
command -v docker >/dev/null 2>&1 || { echo "[ERR] Cần Docker."; exit 1; }

# Linux cần /dev/net/tun
if [[ ! -e /dev/net/tun ]]; then
  echo "[INFO] Tạo /dev/net/tun..."
  sudo mkdir -p /dev/net || true
  sudo mknod /dev/net/tun c 10 200 || true
  sudo chmod 600 /dev/net/tun || true
fi

# ===================== FUNCTIONS =====================
cleanup_route() {
  local idx="$1"
  local g="${GLIDER_NAME_BASE}${idx}"
  local t="${TUN_NAME_BASE}${idx}"
  local d="${DOH_NAME_BASE}${idx}"
  docker rm -f "$d" "$t" "$g" >/dev/null 2>&1 || true
}

start_route() {
  local idx="$1"
  local upstream="$2"
  local socks_port=$((START_SOCKS + idx - 1))

  local g="${GLIDER_NAME_BASE}${idx}"
  local t="${TUN_NAME_BASE}${idx}"
  local d="${DOH_NAME_BASE}${idx}"
  local resolv_file="resolv_${idx}.conf"

  echo "------------------------------------------------------------"
  echo "[ROUTE $idx] Upstream: $upstream"
  echo "[ROUTE $idx] SOCKS5 listen on host: ${socks_port}"

  # 1) Cleanup cũ
  cleanup_route "$idx"

  # 2) Tạo glider: chuyển mọi upstream -> SOCKS5 cục bộ
  echo "[ROUTE $idx] Khởi chạy glider -> socks5://0.0.0.0:${socks_port}"
  docker run -d --name "$g" --restart=always --network host "$IMG_GLIDER" \
    -verbose \
    -listen "socks5://0.0.0.0:${socks_port}" \
    -forward "$upstream"

  # 3) resolv.conf cục bộ (DNS sẽ hỏi 127.0.0.1 trong namespace tun)
  cat > "$resolv_file" <<EOF
options ndots:0
nameserver 127.0.0.1
EOF

  # 4) tun2socks
  #   PROXY trỏ tới SOCKS5 trên host qua địa chỉ bridge 172.17.0.1 (Linux Docker)
  #   Nếu hệ khác, có thể đổi sang host.docker.internal:PORT (Docker Desktop)
  echo "[ROUTE $idx] Khởi chạy tun2socks..."
  docker run -d --name "$t" --restart=always \
    --cap-add=NET_ADMIN \
    -v /dev/net/tun:/dev/net/tun \
    -v "$PWD/$resolv_file":/etc/resolv.conf:ro \
    -e PROXY="socks5://172.17.0.1:${socks_port}" \
    -e LOGLEVEL="$TUN_LOGLEVEL" \
    -e EXTRA_COMMANDS="ip rule add iif lo ipproto udp dport 53 lookup main;" \
    "$IMG_TUN"

  # Tuỳ chọn set MTU nếu cấu hình
  if [[ -n "${TUN_MTU}" ]]; then
    echo "[ROUTE $idx] Set MTU=${TUN_MTU} (best-effort)"
    docker exec -it "$t" sh -c "ip link set dev tun0 mtu ${TUN_MTU} || true"
  fi

  # 5) Cloudflared DoH trong cùng namespace với tun
  echo "[ROUTE $idx] Khởi chạy cloudflared DoH..."
  docker run -d --name "$d" --restart=always \
    --network=container:"$t" \
    --user root \
    "$IMG_DOH" \
    proxy-dns --address 127.0.0.1 --port 53

  # 6) Kiểm tra IP qua tuyến
  echo "[ROUTE $idx] Kiểm tra IP egress..."
  docker run --rm --network=container:"$t" curlimages/curl:latest -s https://ifconfig.me || true
  echo
  echo "[ROUTE $idx] SẴN SÀNG. Gắn container vào tuyến này bằng:"
  echo "  docker run ... --network=container:${t} <image> ..."
}

down_all() {
  echo "[CLEANUP] Xoá toàn bộ tuyến..."
  local i=1
  for _ in "${UPSTREAMS[@]}"; do
    cleanup_route "$i"
    rm -f "resolv_${i}.conf" || true
    ((i++))
  done
  echo "[DONE] Đã xoá."
}

status_all() {
  local i=1
  for _ in "${UPSTREAMS[@]}"; do
    local t="${TUN_NAME_BASE}${i}"
    if docker ps --format '{{.Names}}' | grep -qx "$t"; then
      printf "[STATUS] %s " "$t"
      docker run --rm --network=container:"$t" curlimages/curl:latest -s https://ifconfig.me || true
    else
      echo "[STATUS] $t: not running"
    fi
    ((i++))
  done
}

# ===================== CLI =====================
# ./script.sh          -> khởi chạy tất cả tuyến
# ./script.sh status   -> in IP từng tuyến
# ./script.sh down     -> xoá toàn bộ tuyến
case "${1:-up}" in
  up)
    i=1
    for up in "${UPSTREAMS[@]}"; do
      start_route "$i" "$up"
      ((i++))
    done
    echo
    echo "✅ ĐÃ KHỞI TẠO ${#UPSTREAMS[@]} TUYẾN."
    echo "👉 Gắn container client vào tuyến N:  --network=container:tunN"
    ;;
  status)
    status_all
    ;;
  down)
    down_all
    ;;
  *)
    echo "Usage: $0 [up|status|down]"
    exit 1
    ;;
esac
