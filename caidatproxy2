#!/bin/bash
set -Eeuo pipefail

# ===================== CONFIG =====================
# Khai báo upstream proxy dạng URI. Có thể trộn nhiều loại:
# - HTTP(S):  http://user:pass@host:port
# - SOCKS5:   socks5://user:pass@host:port
# - Shadowsocks: ss://method:password@host:port
# - VMess/Trojan/VLESS/...: để glider -forward tương ứng (xem docs glider)
UPSTREAMS=(
"http://user27474:1758906804@s11.pxus.live:27474"
"http://user20538:1758177032@103.82.25.199:20538"
"http://user55448:1759308326@s13.pxus.live:55448"
"http://user24640:1758163571@s3.pxus.live:24640"
"http://user50907:1758123031@103.82.27.148:50907"
"http://user21772:1759114887@s13.pxus.live:21772"
"http://user38506:1758123016@103.82.26.78:38506"
"http://user14937:1758177032@s15.pxus.live:14937"
"http://user37318:1758265252@103.82.25.199:37318"
"http://user56076:1758740726@103.82.27.99:56076"
"http://user10206:1757935434@103.82.27.99:10206"
"http://user23231:1758163586@103.82.26.78:23231"
"http://user19027:1758072607@103.82.27.99:19027"
"http://user19362:1757589629@103.82.27.99:19362"
"http://user33846:1759040239@s13.pxus.live:33846"
"http://user17626:1757589614@103.82.27.99:17626"
"http://user13751:1757735104@103.82.27.99:13751"
"http://user12454:1757545219@103.82.27.99:12454"
"http://user23315:1758177017@s15.pxus.live:23315"
"http://user27592:1758260705@s15.pxus.live:27592"
"http://user22523:1758072607@103.82.27.99:22523"
"http://user18595:1757898998@103.82.27.148:18595"
"http://user13053:1759408219@s13.pxus.live:13053"
"http://user23645:1758177032@103.82.25.199:23645"
"http://user22340:1757689237@103.82.27.99:22340"
"http://user21035:1757689237@103.82.27.99:21035"
"http://user54491:1758123031@s2.pxus.live:54491"
"http://user17430:1757689237@103.82.27.99:17430"
"http://user29246:1758177032@103.82.25.199:29246"
"http://user38507:1757303440@103.82.26.78:38507"
"http://user38953:1758518106@s13.pxus.live:38953"
"http://user30302:1759040194@s13.pxus.live:30302"
"http://user28690:1758955655@s13.pxus.live:28690"
"http://user11987:1758247210@103.82.25.199:11987"
"http://user26235:1758189488@103.82.25.199:26235"
"http://user10048:1758955640@s13.pxus.live:10048"
"http://user25246:1757735104@103.82.27.99:25246"
"http://user15594:1757545249@103.82.27.99:15594"
"http://user27530:1758247210@s15.pxus.live:27530"
"http://user13047:1757735104@103.82.27.99:13047"
"http://user41783:1758433506@s3.pxus.live:41783"
"http://user19280:1758907059@103.82.25.188:19280"
"http://user12618:1757863866@103.82.27.148:12618"
"http://user12293:1758259144@s13.pxus.live:12293"
"http://user52671:1759227327@s13.pxus.live:52671"
"http://user36444:1758179749@103.82.25.199:36444"
"http://user41379:1759308326@s13.pxus.live:41379"
"http://user12651:1758163616@103.82.26.78:12651"
"http://user24450:1758072607@103.82.27.99:24450"
"http://user44368:1759114857@s13.pxus.live:44368"
"http://user49032:1758360642@s3.pxus.live:49032"
"http://user17260:1758068104@103.82.27.99:17260"
"http://user19661:1758907029@s11.pxus.live:19661"
"http://user20858:1757735104@103.82.27.99:20858"
"http://user19045:1758072607@103.82.27.99:19045"



)


# Cổng SOCKS5 lắng nghe trên host cho từng tuyến (tuyến i dùng START_SOCKS+i)
START_SOCKS=1080

# Tên base cho container theo tuyến
GLIDER_NAME_BASE="glider"
TUN_NAME_BASE="tun"
DOH_NAME_BASE="doh"

# Phiên bản image
IMG_GLIDER="nadoo/glider:latest"
IMG_TUN="xjasonlyu/tun2socks:v2.6.0"
IMG_DOH="cloudflare/cloudflared:latest"

# Log level cho tun2socks
TUN_LOGLEVEL="info"   # debug|info|warn|error

# MTU tuỳ tuyến (để trống để mặc định). Ví dụ 1400 nếu gặp timeouts:
TUN_MTU=""            # ví dụ: "1400"

# ===================== PRECHECK =====================
command -v docker >/dev/null 2>&1 || { echo "[ERR] Cần Docker."; exit 1; }

# Linux cần /dev/net/tun
if [[ ! -e /dev/net/tun ]]; then
  echo "[INFO] Tạo /dev/net/tun..."
  sudo mkdir -p /dev/net || true
  sudo mknod /dev/net/tun c 10 200 || true
  sudo chmod 600 /dev/net/tun || true
fi

# ===================== FUNCTIONS =====================
cleanup_route() {
  local idx="$1"
  local g="${GLIDER_NAME_BASE}${idx}"
  local t="${TUN_NAME_BASE}${idx}"
  local d="${DOH_NAME_BASE}${idx}"
  docker rm -f "$d" "$t" "$g" >/dev/null 2>&1 || true
}

start_route() {
  local idx="$1"
  local upstream="$2"
  local socks_port=$((START_SOCKS + idx - 1))

  local g="${GLIDER_NAME_BASE}${idx}"
  local t="${TUN_NAME_BASE}${idx}"
  local d="${DOH_NAME_BASE}${idx}"
  local resolv_file="resolv_${idx}.conf"

  echo "------------------------------------------------------------"
  echo "[ROUTE $idx] Upstream: $upstream"
  echo "[ROUTE $idx] SOCKS5 listen on host: ${socks_port}"

  # 1) Cleanup cũ
  cleanup_route "$idx"

  # 2) Tạo glider: chuyển mọi upstream -> SOCKS5 cục bộ
  echo "[ROUTE $idx] Khởi chạy glider -> socks5://0.0.0.0:${socks_port}"
  docker run -d --name "$g" --restart=always --network host "$IMG_GLIDER" \
    -verbose \
    -listen "socks5://0.0.0.0:${socks_port}" \
    -forward "$upstream"

  # 3) resolv.conf cục bộ (DNS sẽ hỏi 127.0.0.1 trong namespace tun)
  cat > "$resolv_file" <<EOF
options ndots:0
nameserver 127.0.0.1
EOF

  # 4) tun2socks
  #   PROXY trỏ tới SOCKS5 trên host qua địa chỉ bridge 172.17.0.1 (Linux Docker)
  #   Nếu hệ khác, có thể đổi sang host.docker.internal:PORT (Docker Desktop)
  echo "[ROUTE $idx] Khởi chạy tun2socks..."
  docker run -d --name "$t" --restart=always \
    --cap-add=NET_ADMIN \
    -v /dev/net/tun:/dev/net/tun \
    -v "$PWD/$resolv_file":/etc/resolv.conf:ro \
    -e PROXY="socks5://172.17.0.1:${socks_port}" \
    -e LOGLEVEL="$TUN_LOGLEVEL" \
    -e EXTRA_COMMANDS="ip rule add iif lo ipproto udp dport 53 lookup main;" \
    "$IMG_TUN"

  # Tuỳ chọn set MTU nếu cấu hình
  if [[ -n "${TUN_MTU}" ]]; then
    echo "[ROUTE $idx] Set MTU=${TUN_MTU} (best-effort)"
    docker exec -it "$t" sh -c "ip link set dev tun0 mtu ${TUN_MTU} || true"
  fi

  # 5) Cloudflared DoH trong cùng namespace với tun
  echo "[ROUTE $idx] Khởi chạy cloudflared DoH..."
  docker run -d --name "$d" --restart=always \
    --network=container:"$t" \
    --user root \
    "$IMG_DOH" \
    proxy-dns --address 127.0.0.1 --port 53

  # 6) Kiểm tra IP qua tuyến
  echo "[ROUTE $idx] Kiểm tra IP egress..."
  docker run --rm --network=container:"$t" curlimages/curl:latest -s https://ifconfig.me || true
  echo
  echo "[ROUTE $idx] SẴN SÀNG. Gắn container vào tuyến này bằng:"
  echo "  docker run ... --network=container:${t} <image> ..."
}

down_all() {
  echo "[CLEANUP] Xoá toàn bộ tuyến..."
  local i=1
  for _ in "${UPSTREAMS[@]}"; do
    cleanup_route "$i"
    rm -f "resolv_${i}.conf" || true
    ((i++))
  done
  echo "[DONE] Đã xoá."
}

status_all() {
  local i=1
  for _ in "${UPSTREAMS[@]}"; do
    local t="${TUN_NAME_BASE}${i}"
    if docker ps --format '{{.Names}}' | grep -qx "$t"; then
      printf "[STATUS] %s " "$t"
      docker run --rm --network=container:"$t" curlimages/curl:latest -s https://ifconfig.me || true
    else
      echo "[STATUS] $t: not running"
    fi
    ((i++))
  done
}

# ===================== CLI =====================
# ./script.sh          -> khởi chạy tất cả tuyến
# ./script.sh status   -> in IP từng tuyến
# ./script.sh down     -> xoá toàn bộ tuyến
case "${1:-up}" in
  up)
    i=1
    for up in "${UPSTREAMS[@]}"; do
      start_route "$i" "$up"
      ((i++))
    done
    echo
    echo "✅ ĐÃ KHỞI TẠO ${#UPSTREAMS[@]} TUYẾN."
    echo "👉 Gắn container client vào tuyến N:  --network=container:tunN"
    ;;
  status)
    status_all
    ;;
  down)
    down_all
    ;;
  *)
    echo "Usage: $0 [up|status|down]"
    exit 1
    ;;
esac
