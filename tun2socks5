#!/bin/bash
set -Eeuo pipefail

# ===================== CONFIG =====================
# Danh s√°ch SOCKS5 upstream (kh√¥ng auth) ‚Äî port ƒë√£ ƒë·ªïi th√†nh 1339
UPSTREAMS=(
"socks5://156.239.204.25:1339"
"socks5://156.239.201.49:1339"
"socks5://156.239.202.151:1339"
"socks5://156.239.201.0:1339"
"socks5://156.239.196.11:1339"
"socks5://156.239.203.251:1339"
"socks5://156.239.205.107:1339"
"socks5://156.239.198.52:1339"
"socks5://156.239.195.73:1339"
"socks5://156.239.197.103:1339"
"socks5://156.239.199.213:1339"
"socks5://156.239.199.167:1339"
"socks5://156.239.204.52:1339"
"socks5://156.239.202.70:1339"
"socks5://156.239.205.75:1339"
"socks5://156.239.204.206:1339"
"socks5://156.239.200.103:1339"
"socks5://156.239.193.62:1339"
"socks5://156.239.197.99:1339"
"socks5://156.239.198.0:1339"
"socks5://156.239.203.195:1339"
"socks5://156.239.197.224:1339"
"socks5://156.239.199.24:1339"
"socks5://156.239.193.140:1339"
"socks5://156.239.194.142:1339"
"socks5://156.239.207.106:1339"
"socks5://156.239.207.0:1339"
"socks5://156.239.203.225:1339"
"socks5://156.239.205.187:1339"
"socks5://156.239.200.202:1339"
"socks5://156.239.194.91:1339"
"socks5://156.239.203.182:1339"
"socks5://156.239.192.94:1339"
"socks5://156.239.198.202:1339"
"socks5://156.239.200.17:1339"
"socks5://156.239.205.239:1339"
"socks5://156.239.194.215:1339"
"socks5://156.239.200.138:1339"
"socks5://156.239.195.69:1339"
"socks5://156.239.192.177:1339"
"socks5://156.239.201.64:1339"
"socks5://156.239.205.121:1339"
"socks5://156.239.201.114:1339"
"socks5://156.239.192.11:1339"
"socks5://156.239.206.200:1339"
"socks5://156.239.199.234:1339"
"socks5://156.239.195.189:1339"
"socks5://156.239.207.222:1339"
"socks5://156.239.199.103:1339"
"socks5://156.239.197.3:1339"
"socks5://156.239.223.107:1339"
"socks5://156.239.213.44:1339"
"socks5://156.239.221.33:1339"
"socks5://156.239.220.58:1339"
"socks5://156.239.218.103:1339"
"socks5://156.239.212.135:1339"
"socks5://156.239.211.246:1339"
"socks5://156.239.217.126:1339"
"socks5://156.239.212.18:1339"
"socks5://156.239.219.82:1339"
"socks5://156.239.219.113:1339"
"socks5://156.239.215.30:1339"
"socks5://156.239.209.42:1339"
"socks5://156.239.216.53:1339"
"socks5://156.239.212.140:1339"
"socks5://156.239.215.254:1339"
"socks5://156.239.221.183:1339"
"socks5://156.239.211.102:1339"
"socks5://156.239.217.246:1339"
"socks5://156.239.213.129:1339"
"socks5://156.239.222.188:1339"
"socks5://156.239.216.106:1339"
"socks5://156.239.210.1:1339"
"socks5://156.239.209.140:1339"
"socks5://156.239.218.68:1339"
"socks5://156.239.216.147:1339"
"socks5://156.239.222.133:1339"
"socks5://156.239.213.255:1339"
"socks5://156.239.211.114:1339"
"socks5://156.239.215.101:1339"
"socks5://156.239.223.9:1339"
"socks5://156.239.221.24:1339"
"socks5://156.239.217.162:1339"
"socks5://156.239.220.207:1339"
"socks5://156.239.222.138:1339"
"socks5://156.239.221.166:1339"
"socks5://156.239.219.45:1339"
"socks5://156.239.217.172:1339"
"socks5://156.239.223.220:1339"
"socks5://156.239.215.54:1339"
"socks5://156.239.220.5:1339"
"socks5://156.239.214.6:1339"
"socks5://156.239.221.23:1339"
"socks5://156.239.221.105:1339"
"socks5://156.239.218.63:1339"
"socks5://156.239.222.201:1339"
"socks5://156.239.212.73:1339"
"socks5://156.239.219.187:1339"
"socks5://156.239.214.181:1339"
"socks5://156.239.217.223:1339"
)

# T√™n base cho container theo tuy·∫øn
TUN_NAME_BASE="tun"
DOH_NAME_BASE="doh"

# Images
IMG_TUN="xjasonlyu/tun2socks:v2.6.0"
IMG_DOH="cloudflare/cloudflared:latest"

# Log level cho tun2socks
TUN_LOGLEVEL="info"    # debug|info|warn|error
TUN_MTU=""

# ===================== PRECHECK =====================
command -v docker >/dev/null 2>&1 || { echo "[ERR] C·∫ßn Docker."; exit 1; }
if [[ ! -e /dev/net/tun ]]; then
  echo "[INFO] T·∫°o /dev/net/tun..."
  sudo mkdir -p /dev/net || true
  sudo mknod /dev/net/tun c 10 200 || true
  sudo chmod 600 /dev/net/tun || true
fi

# ===================== FUNCTIONS =====================
cleanup_route() {
  local idx="$1"
  local t="${TUN_NAME_BASE}${idx}"
  local d="${DOH_NAME_BASE}${idx}"
  docker rm -f "$d" "$t" >/dev/null 2>&1 || true
}

start_route() {
  local idx="$1"
  local upstream="$2"
  local t="${TUN_NAME_BASE}${idx}"
  local d="${DOH_NAME_BASE}${idx}"
  local resolv_file="resolv_${idx}.conf"

  echo "------------------------------------------------------------"
  echo "[ROUTE $idx] Upstream: $upstream"

  cleanup_route "$idx"

  cat > "$resolv_file" <<EOF
options ndots:0
nameserver 127.0.0.1
EOF

  echo "[ROUTE $idx] Kh·ªüi ch·∫°y tun2socks..."
  docker run -d --name "$t" --restart=always \
    --cap-add=NET_ADMIN \
    -v /dev/net/tun:/dev/net/tun \
    -v "$PWD/$resolv_file":/etc/resolv.conf:ro \
    -e PROXY="$upstream" \
    -e LOGLEVEL="$TUN_LOGLEVEL" \
    -e EXTRA_COMMANDS="ip rule add iif lo ipproto udp dport 53 lookup main;" \
    "$IMG_TUN"

  if [[ -n "${TUN_MTU}" ]]; then
    echo "[ROUTE $idx] Set MTU=${TUN_MTU} (best-effort)"
    docker exec -it "$t" sh -c "ip link set dev tun0 mtu ${TUN_MTU} || true"
  fi

  echo "[ROUTE $idx] Kh·ªüi ch·∫°y cloudflared DoH..."
  docker run -d --name "$d" --restart=always \
    --network=container:"$t" \
    --user root \
    "$IMG_DOH" proxy-dns --address 127.0.0.1 --port 53

  echo "[ROUTE $idx] Ki·ªÉm tra IP egress..."
  docker run --rm --network=container:"$t" curlimages/curl:latest -s https://ifconfig.me || true
  echo
  echo "[ROUTE $idx] S·∫¥N S√ÄNG. G·∫Øn container client v√†o tuy·∫øn n√†y b·∫±ng:"
  echo "  docker run ... --network=container:${t} <image> ..."
}

down_all() {
  echo "[CLEANUP] Xo√° to√†n b·ªô tuy·∫øn..."
  local i=1
  for _ in "${UPSTREAMS[@]}"; do
    cleanup_route "$i"
    rm -f "resolv_${i}.conf" || true
    ((i++))
  done
  echo "[DONE] ƒê√£ xo√°."
}

status_all() {
  local i=1
  for _ in "${UPSTREAMS[@]}"; do
    local t="${TUN_NAME_BASE}${i}"
    if docker ps --format '{{.Names}}' | grep -qx "$t"; then
      printf "[STATUS] %s " "$t"
      docker run --rm --network=container:"$t" curlimages/curl:latest -s https://ifconfig.me || true
      echo
    else
      echo "[STATUS] $t: not running"
    fi
    ((i++))
  done
}

# ===================== CLI =====================
case "${1:-up}" in
  up)
    i=1
    for up in "${UPSTREAMS[@]}"; do
      start_route "$i" "$up"
      ((i++))
    done
    echo
    echo "‚úÖ ƒê√É KH·ªûI T·∫†O ${#UPSTREAMS[@]} TUY·∫æN."
    echo "üëâ G·∫Øn container client v√†o tuy·∫øn N:  --network=container:tunN"
    ;;
  status) status_all ;;
  down)   down_all ;;
  *) echo "Usage: $0 [up|status|down]"; exit 1 ;;
esac
