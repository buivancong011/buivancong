#!/bin/bash
set -Eeuo pipefail

# ========= PROXIES EMBEDDED =========
# Gi·ªØ socks5h ƒë·ªÉ b·∫°n d·ªÖ qu·∫£n; tun2socks kh√¥ng hi·ªÉu socks5h n√™n m√¨nh t·ª± ƒë·ªïi sang socks5 khi ch·∫°y.
UPSTREAMS=(
"socks5h://156.239.204.25:1339"
"socks5h://156.239.201.49:1339"
"socks5h://156.239.202.151:1339"
"socks5h://156.239.201.0:1339"
"socks5h://156.239.196.11:1339"
"socks5h://156.239.203.251:1339"
"socks5h://156.239.205.107:1339"
"socks5h://156.239.198.52:1339"
"socks5h://156.239.195.73:1339"
"socks5h://156.239.197.103:1339"
"socks5h://156.239.199.213:1339"
"socks5h://156.239.199.167:1339"
"socks5h://156.239.204.52:1339"
"socks5h://156.239.202.70:1339"
"socks5h://156.239.205.75:1339"
"socks5h://156.239.204.206:1339"
"socks5h://156.239.200.103:1339"
"socks5h://156.239.193.62:1339"
"socks5h://156.239.197.99:1339"
"socks5h://156.239.198.0:1339"
"socks5h://156.239.203.195:1339"
"socks5h://156.239.197.224:1339"
"socks5h://156.239.199.24:1339"
"socks5h://156.239.193.140:1339"
"socks5h://156.239.194.142:1339"
"socks5h://156.239.207.106:1339"
"socks5h://156.239.207.0:1339"
"socks5h://156.239.203.225:1339"
"socks5h://156.239.205.187:1339"
"socks5h://156.239.200.202:1339"
"socks5h://156.239.194.91:1339"
"socks5h://156.239.203.182:1339"
"socks5h://156.239.192.94:1339"
"socks5h://156.239.198.202:1339"
"socks5h://156.239.200.17:1339"
"socks5h://156.239.205.239:1339"
"socks5h://156.239.194.215:1339"
"socks5h://156.239.200.138:1339"
"socks5h://156.239.195.69:1339"
"socks5h://156.239.192.177:1339"
"socks5h://156.239.201.64:1339"
"socks5h://156.239.205.121:1339"
"socks5h://156.239.201.114:1339"
"socks5h://156.239.192.11:1339"
"socks5h://156.239.206.200:1339"
"socks5h://156.239.199.234:1339"
"socks5h://156.239.195.189:1339"
"socks5h://156.239.207.222:1339"
"socks5h://156.239.199.103:1339"
"socks5h://156.239.197.3:1339"
"socks5h://156.239.223.107:1339"
"socks5h://156.239.213.44:1339"
"socks5h://156.239.221.33:1339"
"socks5h://156.239.220.58:1339"
"socks5h://156.239.218.103:1339"
"socks5h://156.239.212.135:1339"
"socks5h://156.239.211.246:1339"
"socks5h://156.239.217.126:1339"
"socks5h://156.239.212.18:1339"
"socks5h://156.239.219.82:1339"
"socks5h://156.239.219.113:1339"
"socks5h://156.239.215.30:1339"
"socks5h://156.239.209.42:1339"
"socks5h://156.239.216.53:1339"
"socks5h://156.239.212.140:1339"
"socks5h://156.239.215.254:1339"
"socks5h://156.239.221.183:1339"
"socks5h://156.239.211.102:1339"
"socks5h://156.239.217.246:1339"
"socks5h://156.239.213.129:1339"
"socks5h://156.239.222.188:1339"
"socks5h://156.239.216.106:1339"
"socks5h://156.239.210.1:1339"
"socks5h://156.239.209.140:1339"
"socks5h://156.239.218.68:1339"
"socks5h://156.239.216.147:1339"
"socks5h://156.239.222.133:1339"
"socks5h://156.239.213.255:1339"
"socks5h://156.239.211.114:1339"
"socks5h://156.239.215.101:1339"
"socks5h://156.239.223.9:1339"
"socks5h://156.239.221.24:1339"
"socks5h://156.239.217.162:1339"
"socks5h://156.239.220.207:1339"
"socks5h://156.239.222.138:1339"
"socks5h://156.239.221.166:1339"
"socks5h://156.239.219.45:1339"
"socks5h://156.239.217.172:1339"
"socks5h://156.239.223.220:1339"
"socks5h://156.239.215.54:1339"
"socks5h://156.239.220.5:1339"
"socks5h://156.239.214.6:1339"
"socks5h://156.239.221.23:1339"
"socks5h://156.239.221.105:1339"
"socks5h://156.239.218.63:1339"
"socks5h://156.239.222.201:1339"
"socks5h://156.239.212.73:1339"
"socks5h://156.239.219.187:1339"
"socks5h://156.239.214.181:1339"
"socks5h://156.239.217.223:1339"
)

# ========= CONFIG =========
IMG_TUN="xjasonlyu/tun2socks:v2.6.0"
LOGLEVEL="info"                 # debug|info|warn|error
TUN_NAME_PREFIX="tun"
UNIQUE_ID="$(tr -dc 'a-f0-9' </dev/urandom | head -c 8)"
DNS_FILE="resolv_tun.conf"
MTU=""                          # v√≠ d·ª• "1400" n·∫øu c·∫ßn

command -v docker >/dev/null 2>&1 || { echo "[ERR] Docker ch∆∞a c√†i."; exit 1; }

# /dev/net/tun
if [[ ! -e /dev/net/tun ]]; then
  echo "[INFO] T·∫°o /dev/net/tun‚Ä¶"
  sudo mkdir -p /dev/net || true
  sudo mknod /dev/net/tun c 10 200 || true
  sudo chmod 600 /dev/net/tun || true
fi

# DNS ƒëi qua proxy (TCP)
cat > "$DNS_FILE" <<EOF
options ndots:0
options use-vc
options attempts:2
options timeout:3
nameserver 8.8.8.8
nameserver 1.1.1.1
EOF

validate_uri() {
  local u="$1"
  [[ "$u" =~ ^socks5h?://([0-9]{1,3}\.){3}[0-9]{1,3}:[0-9]+$ ]]
}

probe_proxy() {
  local u="$1"
  curl -sSx "$u" -I "https://www.google.com" --max-time 8 >/dev/null 2>&1
}

wait_running() {
  local name="$1" t=0
  while (( t < 20 )); do
    st="$(docker inspect -f '{{.State.Status}}' "$name" 2>/dev/null || echo missing)"
    [[ "$st" == "running" ]] && return 0
    sleep 1; ((t++))
  done
  return 1
}

start_one() {
  local idx="$1" raw="$2"
  local name="${TUN_NAME_PREFIX}${UNIQUE_ID}${idx}"
  [[ -z "$raw" ]] && return 0

  echo "------------------------------------------------------------"
  echo "[ROUTE $idx] Upstream: $raw"

  if ! validate_uri "$raw"; then
    echo "[ROUTE $idx] ‚ùå URI kh√¥ng h·ª£p l·ªá"; return 0
  fi
  if ! probe_proxy "$raw"; then
    echo "[ROUTE $idx] ‚ùå Proxy kh√¥ng ph·∫£n h·ªìi (probe fail)"; return 0
  fi

  # ƒê·ªïi socks5h -> socks5 cho tun2socks
  local proxy="${raw/socks5h:\/\//socks5://}"

  docker rm -f "$name" >/dev/null 2>&1 || true
  docker run -d --name "$name" --restart=always \
    --cap-add=NET_ADMIN \
    -v /dev/net/tun:/dev/net/tun \
    -v "$PWD/$DNS_FILE":/etc/resolv.conf:ro \
    -e "PROXY=$proxy" \
    -e "LOGLEVEL=$LOGLEVEL" \
    -e "EXTRA_COMMANDS=" \
    "$IMG_TUN" >/dev/null || { echo "[ROUTE $idx] ‚ùå L·ªói kh·ªüi ch·∫°y"; return 0; }

  if ! wait_running "$name"; then
    echo "[ROUTE $idx] ‚ùå Container ch∆∞a running. Logs:"
    docker logs --tail 80 "$name" || true
    return 0
  fi

  [[ -n "$MTU" ]] && docker exec "$name" sh -c "ip link set dev tun0 mtu $MTU || true" >/dev/null 2>&1 || true

  echo "[ROUTE $idx] ‚úÖ S·∫µn s√†ng. IP egress:"
  for try in 1 2 3; do
    if docker run --rm --network=container:"$name" curlimages/curl:latest -s https://ifconfig.me; then
      echo; break
    fi
    echo "[ROUTE $idx] th·ª≠ $try/3‚Ä¶ ƒë·ª£i 2s"; sleep 2
  done

  echo "[ROUTE $idx] G·∫Øn app v√†o tuy·∫øn n√†y:"
  echo "  docker run ... --network=container:${name} <image> ..."
}

status_all() {
  for c in $(docker ps --format '{{.Names}}' | grep "^${TUN_NAME_PREFIX}${UNIQUE_ID}" || true); do
    printf "[STATUS] %s (%s) IP: " "$c" "$(docker inspect -f '{{.State.Status}}' "$c")"
    docker run --rm --network=container:"$c" curlimages/curl:latest -s https://ifconfig.me || true
    echo
  done
}

down_all() {
  echo "[CLEANUP] X√≥a t·∫•t c·∫£ tuy·∫øn thu·ªôc batch n√†y‚Ä¶"
  docker ps -a --format '{{.Names}}' | grep "^${TUN_NAME_PREFIX}${UNIQUE_ID}" | xargs -r docker rm -f
  rm -f "$DNS_FILE" || true
  echo "[DONE]"
}

case "${1:-up}" in
  up)
    i=0
    for up in "${UPSTREAMS[@]}"; do
      ((i++)); start_one "$i" "$up"; sleep 0.3
    done
    echo; echo "üëâ ƒê√£ x·ª≠ l√Ω ${#UPSTREAMS[@]} proxy."
    echo "üëâ D√πng: docker run ‚Ä¶ --network=container:tun${UNIQUE_ID}N ‚Ä¶"
    ;;
  status) status_all ;;
  down)   down_all   ;;
  *) echo "Usage: $0 [up|status|down]" ;;
esac
