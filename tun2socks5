# 1) Tạo file
cat > net-tun-socks5.sh <<'EOF'
#!/usr/bin/env bash
set -Eeuo pipefail

# ===================== CONFIG =====================
TUN_IMAGE="xjasonlyu/tun2socks:v2.6.0"
DNS_RESOLVER_FILE="resolv.conf"
TUN_LIMITS="--cpus=0.15 --memory=96m --memory-swap=96m"
LOGS=false
TEST_URL="https://api.ipify.org"
UNIQUE_ID_FILE=".net_tun_unique_id"
CONTAINER_LIST_FILE="tun_containers.txt"

# ================== PROXY ĐÃ ĐỔI SẴN 1339 ==================
read -r -d '' RAW <<'PROX'
156.239.204.25:1338
156.239.201.49:1338
156.239.202.151:1338
156.239.201.0:1338
156.239.196.11:1338
156.239.203.251:1338
156.239.205.107:1338
156.239.198.52:1338
156.239.195.73:1338
156.239.197.103:1338
156.239.199.213:1338
156.239.199.167:1338
156.239.204.52:1338
156.239.202.70:1338
156.239.205.75:1338
156.239.204.206:1338
156.239.200.103:1338
156.239.193.62:1338
156.239.197.99:1338
156.239.198.0:1338
156.239.203.195:1338
156.239.197.224:1338
156.239.199.24:1338
156.239.193.140:1338
156.239.194.142:1338
156.239.207.106:1338
156.239.207.0:1338
156.239.203.225:1338
156.239.205.187:1338
156.239.200.202:1338
156.239.194.91:1338
156.239.203.182:1338
156.239.192.94:1338
156.239.198.202:1338
156.239.200.17:1338
156.239.205.239:1338
156.239.194.215:1338
156.239.200.138:1338
156.239.195.69:1338
156.239.192.177:1338
156.239.201.64:1338
156.239.205.121:1338
156.239.201.114:1338
156.239.192.11:1338
156.239.206.200:1338
156.239.199.234:1338
156.239.195.189:1338
156.239.207.222:1338
156.239.199.103:1338
156.239.197.3:1338
156.239.223.107:1338
156.239.213.44:1338
156.239.221.33:1338
156.239.220.58:1338
156.239.218.103:1338
156.239.212.135:1338
156.239.211.246:1338
156.239.217.126:1338
156.239.212.18:1338
156.239.219.82:1338
156.239.219.113:1338
156.239.215.30:1338
156.239.209.42:1338
156.239.216.53:1338
156.239.212.140:1338
156.239.215.254:1338
156.239.221.183:1338
156.239.211.102:1338
156.239.217.246:1338
156.239.213.129:1338
156.239.222.188:1338
156.239.216.106:1338
156.239.210.1:1338
156.239.209.140:1338
156.239.218.68:1338
156.239.216.147:1338
156.239.222.133:1338
156.239.213.255:1338
156.239.211.114:1338
156.239.215.101:1338
156.239.223.9:1338
156.239.221.24:1338
156.239.217.162:1338
156.239.220.207:1338
156.239.222.138:1338
156.239.221.166:1338
156.239.219.45:1338
156.239.217.172:1338
156.239.223.220:1338
156.239.215.54:1338
156.239.220.5:1338
156.239.214.6:1338
156.239.221.23:1338
156.239.221.105:1338
156.239.218.63:1338
156.239.222.201:1338
156.239.212.73:1338
156.239.219.187:1338
156.239.214.181:1338
156.239.217.223:1338
PROX

# =============== HELPERS ===============
log_params() {
  [[ "$LOGS" == "true" ]] && echo "--log-driver=json-file --log-opt max-size=100k" || echo "--log-driver none"
}

ensure_deps() {
  echo "[*] Kiểm tra Docker..."
  command -v docker >/dev/null 2>&1 || { echo "❌ Docker chưa cài."; exit 1; }

  echo "[*] Tạo $DNS_RESOLVER_FILE cho container..."
  printf 'nameserver 8.8.8.8\nnameserver 1.1.1.1\nnameserver 9.9.9.9\n' > "$DNS_RESOLVER_FILE"

  echo "[*] Kiểm tra /dev/net/tun..."
  if [[ ! -e /dev/net/tun ]]; then
    echo "❌ Thiếu /dev/net/tun. Hãy bật module TUN:  sudo modprobe tun"
    exit 1
  fi
}

persist_uid() {
  if [[ -f "$UNIQUE_ID_FILE" ]]; then
    UNIQUE_ID="$(cat "$UNIQUE_ID_FILE")"
  else
    UNIQUE_ID="$(tr -dc 'a-f0-9' </dev/urandom | dd bs=1 count=16 2>/dev/null)"
    echo "$UNIQUE_ID" > "$UNIQUE_ID_FILE"
  fi
  echo "[*] UNIQUE_ID = $UNIQUE_ID"
}

start_all() {
  ensure_deps
  persist_uid
  local logs; logs="$(log_params)"

  echo "[*] Kéo image $TUN_IMAGE (nếu chưa có)..."
  docker pull "$TUN_IMAGE" >/dev/null || { echo "❌ docker pull fail"; exit 1; }

  : > "$CONTAINER_LIST_FILE"

  echo "[*] Bắt đầu tạo tuyến..."
  local i=0
  while IFS= read -r line; do
    line="$(echo "$line" | tr -d '[:space:]')"
    [[ -z "$line" || "$line" =~ ^# ]] && continue
    i=$((i+1))
    local ipport="${line/%:1338/:1339}"             # đổi 1338 -> 1339
    local proxy="socks5://${ipport}"
    local name="tun${UNIQUE_ID}${i}"

    echo "  - [$i] $name  proxy=$proxy"
    if docker run -d --name "$name" \
        $TUN_LIMITS $logs \
        -v "$PWD/$DNS_RESOLVER_FILE:/etc/resolv.conf:ro" \
        -v /dev/net/tun:/dev/net/tun \
        --cap-add=NET_ADMIN \
        -e LOGLEVEL=silent \
        -e PROXY="$proxy" \
        -e EXTRA_COMMANDS="ip rule add iif lo ipproto udp dport 53 lookup main;" \
        --restart=always \
        "$TUN_IMAGE" >/dev/null; then
      echo "$name" >> "$CONTAINER_LIST_FILE"
    else
      echo "    ❌ Lỗi khởi chạy $name"
    fi
  done <<< "$RAW"

  echo "[*] Tạo xong. Tổng tuyến: $(wc -l < "$CONTAINER_LIST_FILE" || echo 0)"
  echo "[*] Test nhanh (lấy tên tuyến đầu):"
  echo "    docker run --rm --network=container:\$(sed -n '1p' $CONTAINER_LIST_FILE) curlimages/curl -4 -s $TEST_URL"
}

down_all() {
  if [[ -f "$CONTAINER_LIST_FILE" ]]; then
    echo "[*] Xoá các tuyến đã tạo..."
    tac "$CONTAINER_LIST_FILE" | while read -r name; do
      [[ -z "$name" ]] && continue
      docker rm -f "$name" >/dev/null 2>&1 && echo "  - removed $name"
    done
    rm -f "$CONTAINER_LIST_FILE"
  fi
  rm -f "$DNS_RESOLVER_FILE"
  echo "✅ Đã dọn sạch."
}

status_all() {
  echo "=== TUN status ==="
  docker ps --format "table {{.Names}}\t{{.Status}}" | grep -E '^tun' || echo "Không có tuyến nào."
  [[ -f "$CONTAINER_LIST_FILE" ]] && { echo; echo "Danh sách đã tạo:"; nl -ba "$CONTAINER_LIST_FILE"; }
}

usage() {
  echo "Dùng: $0 --up | --down | --status"
}

case "${1:-}" in
  --up) start_all ;;
  --down) down_all ;;
  --status) status_all ;;
  *) usage; exit 1 ;;
esac
EOF

# 2) Quyền thực thi
chmod +x net-tun-socks5.sh

# 3) Chạy tạo tất cả tuyến
sudo ./net-tun-socks5.sh --up

# 4) Xem trạng thái
./net-tun-socks5.sh --status

# 5) Test 1 tuyến bất kỳ (tuyến đầu)
TUN=$(sed -n '1p' tun_containers.txt)
docker run --rm --network=container:$TUN curlimages/curl -4 -s https://api.ipify.org
