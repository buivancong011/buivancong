#!/usr/bin/env bash
set -Eeuo pipefail

# ===================== CONFIG =====================
# Đặt TOKEN tại đây hoặc export trước khi chạy:
TOKEN="${TOKEN:-0l+0r9mje+tN4NUPfmXkTcnnVAf/7q6iHXV9JSqotkQ=}"

# Tiền tố container sing-box và traffmonetizer
SBOX_PREFIX="sbox"
TM_PREFIX="tm-"

# Ảnh Traffmonetizer
TM_IMAGE="traffmonetizer/cli_v2"

# Thư mục lưu data của TM (mỗi route 1 thư mục con)
DATA_BASE="$PWD/traffmonetizer"

# Thời gian chờ sbox lên running (giây)
WAIT_TIMEOUT=25

# ===================== PRECHECK =====================
command -v docker >/dev/null 2>&1 || { echo "[ERR] Cần Docker."; exit 1; }
if [[ -z "${TOKEN}" ]]; then
  echo "[ERR] Chưa có TOKEN. Hãy sửa biến TOKEN trong script hoặc export TOKEN trước khi chạy."
  exit 1
fi

# ===================== FUNCS =====================
discover_sbox() {
  # liệt kê tất cả sboxN đang tồn tại (đang chạy hoặc dừng)
  docker ps -a --format '{{.Names}}' | awk -v pfx="^${SBOX_PREFIX}[0-9]+$" '$0 ~ pfx' | sort -V
}

wait_running_sbox() {
  # $1: sbox name, $2: timeout seconds
  local name="$1" timeout="${2:-$WAIT_TIMEOUT}" t=0
  while :; do
    local st
    st="$(docker inspect -f '{{.State.Status}}' "$name" 2>/dev/null || true)"
    case "$st" in
      running) return 0 ;;
      restarting|created|starting)
        if (( t >= timeout )); then
          echo "[WARN] $name chưa running sau ${timeout}s (status=$st)."
          return 1
        fi
        sleep 1; ((t++))
        ;;
      exited|dead|'')
        echo "[ERR] $name status=$st. Không thể gắn TM vào."
        return 1
        ;;
      *)
        sleep 1
        ;;
    esac
  done
}

start_tm_for_sbox() {
  # $1: sbox name (vd: sbox2)
  local sbox="$1"
  local idx="${sbox#${SBOX_PREFIX}}"                 # N
  local tm_name="${TM_PREFIX}${sbox}"                # tm-sbox2
  local data_dir="${DATA_BASE}/${sbox}"

  echo "→ Khởi chạy ${tm_name} (gắn với ${sbox})"

  # chuẩn bị thư mục
  mkdir -p "${data_dir}"

  # xoá container cũ (nếu có)
  docker rm -f "${tm_name}" >/dev/null 2>&1 || true

  # chạy
  docker run -d --name "${tm_name}" \
    --pull=always \
    --network=container:"${sbox}" \
    --restart=always \
    -v "${data_dir}:/app/traffmonetizer" \
    "${TM_IMAGE}" \
      start accept \
        --device-name "${sbox}" \
        --token "${TOKEN}" >/dev/null

  echo "   ✓ ${tm_name} đã start"
}

stop_tm_for_sbox() {
  local sbox="$1"
  local tm_name="${TM_PREFIX}${sbox}"
  docker rm -f "${tm_name}" >/dev/null 2>&1 && echo "✗ ${tm_name} đã xoá" || true
}

status_tm_for_sbox() {
  local sbox="$1"
  local tm_name="${TM_PREFIX}${sbox}"
  if docker ps -a --format '{{.Names}}\t{{.Status}}' | grep -q "^${tm_name}\b"; then
    docker ps -a --format '{{.Names}}\t{{.Status}}' | awk -v n="${tm_name}" '$1==n{print}'
  else
    echo "${tm_name}    (not found)"
  fi
}

logs_tm_for_sbox() {
  local sbox="$1"
  local tm_name="${TM_PREFIX}${sbox}"
  echo "===== ${tm_name} ====="
  docker logs --since=30m -n 200 "${tm_name}" || true
}

cmd_up() {
  local list; list="$(discover_sbox)"
  if [[ -z "${list}" ]]; then
    echo "[ERR] Không tìm thấy container ${SBOX_PREFIX}N nào. Hãy chạy script tạo sbox trước."
    exit 1
  fi

  echo "[INFO] Phát hiện các routes:"
  echo "${list}" | xargs -I{} echo " - {}"

  echo
  echo "[INFO] Kiểm tra và chờ từng sbox vào trạng thái running..."
  while read -r s; do
    wait_running_sbox "$s" "$WAIT_TIMEOUT" || echo "   ⚠ Bỏ qua ${s} vì chưa running."
  done <<< "${list}"

  echo
  echo "[INFO] Khởi chạy TM cho các routes:"
  while read -r s; do
    if docker inspect -f '{{.State.Status}}' "$s" >/dev/null 2>&1 && \
       [[ "$(docker inspect -f '{{.State.Status}}' "$s")" == "running" ]]; then
      start_tm_for_sbox "$s"
    else
      echo "   ⚠ Bỏ qua ${s} (không running)."
    fi
  done <<< "${list}"

  echo
  echo "✅ Hoàn tất. Dùng:  $0 status   để xem trạng thái."
}

cmd_down() {
  local list; list="$(discover_sbox)"
  if [[ -z "${list}" ]]; then
    echo "[INFO] Không có ${SBOX_PREFIX}N nào. Vẫn sẽ xoá các tm-* nếu còn."
  fi

  # Xoá tất cả container tm-sbox*
  docker ps -a --format '{{.Names}}' | awk -v pfx="^${TM_PREFIX}${SBOX_PREFIX}[0-9]+$" '$0 ~ pfx' \
    | while read -r tm; do docker rm -f "$tm" >/dev/null 2>&1 && echo "✗ $tm đã xoá" || true; done
  echo "[DONE] Đã dừng toàn bộ Traffmonetizer gắn với sbox."
}

cmd_status() {
  local list; list="$(discover_sbox)"
  if [[ -z "${list}" ]]; then
    echo "[INFO] Không tìm thấy ${SBOX_PREFIX}N nào."
    exit 0
  fi
  echo "[STATUS] sbox & tm-sbox:"
  while read -r s; do
    local st
    st="$(docker inspect -f '{{.State.Status}}' "$s" 2>/dev/null || echo "unknown")"
    printf "%-8s: %s\n" "$s" "$st"
    status_tm_for_sbox "$s"
  done <<< "${list}"
}

cmd_logs() {
  local list; list="$(discover_sbox)"
  if [[ -z "${list}" ]]; then
    echo "[INFO] Không tìm thấy ${SBOX_PREFIX}N nào."
    exit 0
  fi
  while read -r s; do
    logs_tm_for_sbox "$s"
  done <<< "${list}"
}

# ===================== CLI =====================
case "${1:-up}" in
  up)      cmd_up ;;
  down)    cmd_down ;;
  status)  cmd_status ;;
  logs)    cmd_logs ;;
  *)
    echo "Usage: $0 [up|down|status|logs]"
    exit 1
    ;;
esac
