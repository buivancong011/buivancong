#!/bin/bash
set -Eeuo pipefail

# ===================== CONFIG =====================
# Khai báo upstream proxy dạng URI. Có thể trộn nhiều loại:
# - HTTP(S):  http://user:pass@host:port
# - SOCKS5:   socks5://user:pass@host:port
# - Shadowsocks: ss://method:password@host:port
# - VMess/Trojan/VLESS/...: để glider -forward tương ứng (xem docs glider)
UPSTREAMS=(
"http://user45493:1757043028@103.82.26.78:45493"
"http://user19045:1758072607@103.82.27.99:19045"
"http://user38905:1757322005@103.82.27.148:38905"
"http://user16244:1757545234@103.82.27.99:16244"
"http://user11236:1757662210@103.82.27.99:11236"
"http://user17626:1757589614@103.82.27.99:17626"
"http://user39397:1757444409@103.82.27.148:39397"
"http://user56190:1757555125@103.82.27.148:56190"
"http://user19075:1758072607@103.82.27.99:19075"
"http://user12735:1758123031@103.82.27.148:12735"
"http://user20406:1757545219@103.82.27.99:20406"
"http://user18838:1757545234@103.82.27.99:18838"
"http://user42424:1758123031@103.82.27.148:42424"
"http://user39860:1757899013@103.82.26.78:39860"
"http://user13047:1757735104@103.82.27.99:13047"
"http://user28454:1757898908@103.82.27.148:28454"
"http://user18566:1757769801@103.82.27.99:18566"
"http://user20317:1757545249@103.82.27.99:20317"
"http://user57748:1757769786@103.82.27.148:57748"
"http://user13088:1757689207@103.82.27.99:13088"
"http://user59791:1757242075@103.82.27.148:59791"
"http://user17430:1757689237@103.82.27.99:17430"
"http://user18791:1757545264@103.82.27.99:18791"
"http://user13539:1757675281@103.82.27.99:13539"
"http://user56421:1757896206@103.82.26.78:56421"
"http://user39818:1758123031@103.82.27.148:39818"
"http://user14951:1757051102@103.82.27.148:14951"
"http://user15262:1757689207@103.82.27.99:15262"
"http://user16083:1757689207@103.82.27.99:16083"
"http://user12411:1757689237@103.82.27.99:12411"
"http://user12130:1757689222@103.82.27.99:12130"
"http://user50907:1758123031@103.82.27.148:50907"
"http://user46696:1757555125@103.82.27.148:46696"
"http://user13080:1758123031@103.82.27.148:13080"
"http://user20089:1757818876@103.82.27.99:20089"
"http://user45806:1757382410@103.82.26.78:45806"
"http://user16738:1757769801@103.82.27.99:16738"
"http://user14029:1758072607@103.82.27.99:14029"
"http://user21317:1757689237@103.82.27.99:21317"
"http://user59692:1757555110@103.82.26.78:59692"
"http://user11306:1758072622@103.82.27.99:11306"
"http://user40540:1757990754@103.82.27.148:40540"
"http://user24085:1758109794@103.82.27.99:24085"
"http://user15824:1757689207@103.82.27.99:15824"
"http://user16901:1757545249@103.82.27.99:16901"
"http://user42651:1757322020@103.82.26.78:42651"
"http://user17205:1758072607@103.82.27.99:17205"
"http://user21035:1757689237@103.82.27.99:21035"
"http://user15718:1758072607@103.82.27.99:15718"
"http://user16684:1758085213@103.82.27.99:16684"
"http://user47056:1757322005@103.82.27.148:47056"
"http://user19362:1757589629@103.82.27.99:19362"
"http://user54573:1757083010@103.82.26.78:54573"
"http://user18469:1757322066@103.82.27.99:18469"
"http://user20343:1757689222@103.82.27.99:20343"
"http://user19109:1757863866@103.82.27.148:19109"
"http://user49927:1757924104@103.82.26.78:49927"
"http://user38506:1758123016@103.82.26.78:38506"
"http://user59758:1757382410@103.82.26.78:59758"
"http://user17435:1758072607@103.82.27.99:17435"



)


# Cổng SOCKS5 lắng nghe trên host cho từng tuyến (tuyến i dùng START_SOCKS+i)
START_SOCKS=1080

# Tên base cho container theo tuyến
GLIDER_NAME_BASE="glider"
TUN_NAME_BASE="tun"
DOH_NAME_BASE="doh"

# Phiên bản image
IMG_GLIDER="nadoo/glider:latest"
IMG_TUN="xjasonlyu/tun2socks:v2.6.0"
IMG_DOH="cloudflare/cloudflared:latest"

# Log level cho tun2socks
TUN_LOGLEVEL="info"   # debug|info|warn|error

# MTU tuỳ tuyến (để trống để mặc định). Ví dụ 1400 nếu gặp timeouts:
TUN_MTU=""            # ví dụ: "1400"

# ===================== PRECHECK =====================
command -v docker >/dev/null 2>&1 || { echo "[ERR] Cần Docker."; exit 1; }

# Linux cần /dev/net/tun
if [[ ! -e /dev/net/tun ]]; then
  echo "[INFO] Tạo /dev/net/tun..."
  sudo mkdir -p /dev/net || true
  sudo mknod /dev/net/tun c 10 200 || true
  sudo chmod 600 /dev/net/tun || true
fi

# ===================== FUNCTIONS =====================
cleanup_route() {
  local idx="$1"
  local g="${GLIDER_NAME_BASE}${idx}"
  local t="${TUN_NAME_BASE}${idx}"
  local d="${DOH_NAME_BASE}${idx}"
  docker rm -f "$d" "$t" "$g" >/dev/null 2>&1 || true
}

start_route() {
  local idx="$1"
  local upstream="$2"
  local socks_port=$((START_SOCKS + idx - 1))

  local g="${GLIDER_NAME_BASE}${idx}"
  local t="${TUN_NAME_BASE}${idx}"
  local d="${DOH_NAME_BASE}${idx}"
  local resolv_file="resolv_${idx}.conf"

  echo "------------------------------------------------------------"
  echo "[ROUTE $idx] Upstream: $upstream"
  echo "[ROUTE $idx] SOCKS5 listen on host: ${socks_port}"

  # 1) Cleanup cũ
  cleanup_route "$idx"

  # 2) Tạo glider: chuyển mọi upstream -> SOCKS5 cục bộ
  echo "[ROUTE $idx] Khởi chạy glider -> socks5://0.0.0.0:${socks_port}"
  docker run -d --name "$g" --restart=always --network host "$IMG_GLIDER" \
    -verbose \
    -listen "socks5://0.0.0.0:${socks_port}" \
    -forward "$upstream"

  # 3) resolv.conf cục bộ (DNS sẽ hỏi 127.0.0.1 trong namespace tun)
  cat > "$resolv_file" <<EOF
options ndots:0
nameserver 127.0.0.1
EOF

  # 4) tun2socks
  #   PROXY trỏ tới SOCKS5 trên host qua địa chỉ bridge 172.17.0.1 (Linux Docker)
  #   Nếu hệ khác, có thể đổi sang host.docker.internal:PORT (Docker Desktop)
  echo "[ROUTE $idx] Khởi chạy tun2socks..."
  docker run -d --name "$t" --restart=always \
    --cap-add=NET_ADMIN \
    -v /dev/net/tun:/dev/net/tun \
    -v "$PWD/$resolv_file":/etc/resolv.conf:ro \
    -e PROXY="socks5://172.17.0.1:${socks_port}" \
    -e LOGLEVEL="$TUN_LOGLEVEL" \
    -e EXTRA_COMMANDS="ip rule add iif lo ipproto udp dport 53 lookup main;" \
    "$IMG_TUN"

  # Tuỳ chọn set MTU nếu cấu hình
  if [[ -n "${TUN_MTU}" ]]; then
    echo "[ROUTE $idx] Set MTU=${TUN_MTU} (best-effort)"
    docker exec -it "$t" sh -c "ip link set dev tun0 mtu ${TUN_MTU} || true"
  fi

  # 5) Cloudflared DoH trong cùng namespace với tun
  echo "[ROUTE $idx] Khởi chạy cloudflared DoH..."
  docker run -d --name "$d" --restart=always \
    --network=container:"$t" \
    --user root \
    "$IMG_DOH" \
    proxy-dns --address 127.0.0.1 --port 53

  # 6) Kiểm tra IP qua tuyến
  echo "[ROUTE $idx] Kiểm tra IP egress..."
  docker run --rm --network=container:"$t" curlimages/curl:latest -s https://ifconfig.me || true
  echo
  echo "[ROUTE $idx] SẴN SÀNG. Gắn container vào tuyến này bằng:"
  echo "  docker run ... --network=container:${t} <image> ..."
}

down_all() {
  echo "[CLEANUP] Xoá toàn bộ tuyến..."
  local i=1
  for _ in "${UPSTREAMS[@]}"; do
    cleanup_route "$i"
    rm -f "resolv_${i}.conf" || true
    ((i++))
  done
  echo "[DONE] Đã xoá."
}

status_all() {
  local i=1
  for _ in "${UPSTREAMS[@]}"; do
    local t="${TUN_NAME_BASE}${i}"
    if docker ps --format '{{.Names}}' | grep -qx "$t"; then
      printf "[STATUS] %s " "$t"
      docker run --rm --network=container:"$t" curlimages/curl:latest -s https://ifconfig.me || true
    else
      echo "[STATUS] $t: not running"
    fi
    ((i++))
  done
}

# ===================== CLI =====================
# ./script.sh          -> khởi chạy tất cả tuyến
# ./script.sh status   -> in IP từng tuyến
# ./script.sh down     -> xoá toàn bộ tuyến
case "${1:-up}" in
  up)
    i=1
    for up in "${UPSTREAMS[@]}"; do
      start_route "$i" "$up"
      ((i++))
    done
    echo
    echo "✅ ĐÃ KHỞI TẠO ${#UPSTREAMS[@]} TUYẾN."
    echo "👉 Gắn container client vào tuyến N:  --network=container:tunN"
    ;;
  status)
    status_all
    ;;
  down)
    down_all
    ;;
  *)
    echo "Usage: $0 [up|status|down]"
    exit 1
    ;;
esac
