#!/bin/bash
set -Eeuo pipefail

# ===================== CONFIG =====================
# Khai báo upstream proxy dạng URI. Có thể trộn nhiều loại:
# - HTTP(S):  http://user:pass@host:port
# - SOCKS5:   socks5://user:pass@host:port
# - Shadowsocks: ss://method:password@host:port
# - VMess/Trojan/VLESS/...: để glider -forward tương ứng (xem docs glider)
UPSTREAMS=(
"http://user25866:1757082694@103.82.26.173:25866"
"http://user20306:1757545264@103.82.27.99:20306"
"http://user14816:1757689207@103.82.27.99:14816"
"http://user14685:1757689207@103.82.27.99:14685"
"http://user17757:1757769801@103.82.27.99:17757"
"http://user20262:1756577036@103.82.25.188:20262"
"http://user16244:1757545234@103.82.27.99:16244"
"http://user19045:1758072607@103.82.27.99:19045"
"http://user39860:1757899013@103.82.26.78:39860"
"http://user14396:1758906804@103.82.25.188:14396"
"http://user32876:1758772588@103.82.27.148:32876"
"http://user27587:1757303320@103.82.26.173:27587"
"http://user23645:1758177032@103.82.25.199:23645"
"http://user18577:1758906774@103.82.25.188:18577"
"http://user31138:1756884636@103.82.25.9:31138"
"http://user30666:1756884936@103.82.25.9:30666"
"http://user37963:1756884726@103.82.25.9:37963"
"http://user37832:1756884891@103.82.25.9:37832"
"http://user22543:1758477690@103.82.25.188:22543"
"http://user34522:1757060107@103.82.25.9:34522"
"http://user26239:1757253602@103.82.26.173:26239"
"http://user13198:1758906774@103.82.25.188:13198"
"http://user59803:1757242045@103.82.27.148:59803"
"http://user37948:1757082964@103.82.25.9:37948"
"http://user25697:1757303095@103.82.26.173:25697"
"http://user33969:1757322036@103.82.26.78:33969"
"http://user56416:1757144001@103.82.27.148:56416"
"http://user30190:1756884651@103.82.25.9:30190"
"http://user29745:1756884621@103.82.25.9:29745"
"http://user47308:1756576976@103.82.25.188:47308"
"http://user26307:1757142996@103.82.26.173:26307"
"http://user28831:1756884877@103.82.25.9:28831"
"http://user27331:1757082769@103.82.26.173:27331"
"http://user45914:1758348936@103.82.26.78:45914"
"http://user19783:1758265252@103.82.25.199:19783"
"http://user48716:1758265267@103.82.26.78:48716"
"http://user33957:1759040270@103.82.26.78:33957"
"http://user34980:1757082979@103.82.25.9:34980"
"http://user26059:1757082784@103.82.26.173:26059"
"http://user34773:1756884921@103.82.25.9:34773"
"http://user28051:1757082769@103.82.26.173:28051"
"http://user17139:1758177017@103.82.25.199:17139"
"http://user16684:1758085213@103.82.27.99:16684"
"http://user18566:1757769801@103.82.27.99:18566"
"http://user12454:1757545219@103.82.27.99:12454"
"http://user24555:1757769801@103.82.27.99:24555"
"http://user20089:1757818876@103.82.27.99:20089"
"http://user13539:1757675281@103.82.27.99:13539"
"http://user24085:1758109794@103.82.27.99:24085"
"http://user25777:1757545234@103.82.27.99:25777"
"http://user25845:1757545249@103.82.27.99:25845"
"http://user27398:1757082619@103.82.26.173:27398"
"http://user37120:1757082949@103.82.25.9:37120"
"http://user36124:1756884681@103.82.25.9:36124"
"http://user28261:1757082769@103.82.26.173:28261"



)


# Cổng SOCKS5 lắng nghe trên host cho từng tuyến (tuyến i dùng START_SOCKS+i)
START_SOCKS=1080

# Tên base cho container theo tuyến
GLIDER_NAME_BASE="glider"
TUN_NAME_BASE="tun"
DOH_NAME_BASE="doh"

# Phiên bản image
IMG_GLIDER="nadoo/glider:latest"
IMG_TUN="xjasonlyu/tun2socks:v2.6.0"
IMG_DOH="cloudflare/cloudflared:latest"

# Log level cho tun2socks
TUN_LOGLEVEL="info"   # debug|info|warn|error

# MTU tuỳ tuyến (để trống để mặc định). Ví dụ 1400 nếu gặp timeouts:
TUN_MTU=""            # ví dụ: "1400"

# ===================== PRECHECK =====================
command -v docker >/dev/null 2>&1 || { echo "[ERR] Cần Docker."; exit 1; }

# Linux cần /dev/net/tun
if [[ ! -e /dev/net/tun ]]; then
  echo "[INFO] Tạo /dev/net/tun..."
  sudo mkdir -p /dev/net || true
  sudo mknod /dev/net/tun c 10 200 || true
  sudo chmod 600 /dev/net/tun || true
fi

# ===================== FUNCTIONS =====================
cleanup_route() {
  local idx="$1"
  local g="${GLIDER_NAME_BASE}${idx}"
  local t="${TUN_NAME_BASE}${idx}"
  local d="${DOH_NAME_BASE}${idx}"
  docker rm -f "$d" "$t" "$g" >/dev/null 2>&1 || true
}

start_route() {
  local idx="$1"
  local upstream="$2"
  local socks_port=$((START_SOCKS + idx - 1))

  local g="${GLIDER_NAME_BASE}${idx}"
  local t="${TUN_NAME_BASE}${idx}"
  local d="${DOH_NAME_BASE}${idx}"
  local resolv_file="resolv_${idx}.conf"

  echo "------------------------------------------------------------"
  echo "[ROUTE $idx] Upstream: $upstream"
  echo "[ROUTE $idx] SOCKS5 listen on host: ${socks_port}"

  # 1) Cleanup cũ
  cleanup_route "$idx"

  # 2) Tạo glider: chuyển mọi upstream -> SOCKS5 cục bộ
  echo "[ROUTE $idx] Khởi chạy glider -> socks5://0.0.0.0:${socks_port}"
  docker run -d --name "$g" --restart=always --network host "$IMG_GLIDER" \
    -verbose \
    -listen "socks5://0.0.0.0:${socks_port}" \
    -forward "$upstream"

  # 3) resolv.conf cục bộ (DNS sẽ hỏi 127.0.0.1 trong namespace tun)
  cat > "$resolv_file" <<EOF
options ndots:0
nameserver 127.0.0.1
EOF

  # 4) tun2socks
  #   PROXY trỏ tới SOCKS5 trên host qua địa chỉ bridge 172.17.0.1 (Linux Docker)
  #   Nếu hệ khác, có thể đổi sang host.docker.internal:PORT (Docker Desktop)
  echo "[ROUTE $idx] Khởi chạy tun2socks..."
  docker run -d --name "$t" --restart=always \
    --cap-add=NET_ADMIN \
    -v /dev/net/tun:/dev/net/tun \
    -v "$PWD/$resolv_file":/etc/resolv.conf:ro \
    -e PROXY="socks5://172.17.0.1:${socks_port}" \
    -e LOGLEVEL="$TUN_LOGLEVEL" \
    -e EXTRA_COMMANDS="ip rule add iif lo ipproto udp dport 53 lookup main;" \
    "$IMG_TUN"

  # Tuỳ chọn set MTU nếu cấu hình
  if [[ -n "${TUN_MTU}" ]]; then
    echo "[ROUTE $idx] Set MTU=${TUN_MTU} (best-effort)"
    docker exec -it "$t" sh -c "ip link set dev tun0 mtu ${TUN_MTU} || true"
  fi

  # 5) Cloudflared DoH trong cùng namespace với tun
  echo "[ROUTE $idx] Khởi chạy cloudflared DoH..."
  docker run -d --name "$d" --restart=always \
    --network=container:"$t" \
    --user root \
    "$IMG_DOH" \
    proxy-dns --address 127.0.0.1 --port 53

  # 6) Kiểm tra IP qua tuyến
  echo "[ROUTE $idx] Kiểm tra IP egress..."
  docker run --rm --network=container:"$t" curlimages/curl:latest -s https://ifconfig.me || true
  echo
  echo "[ROUTE $idx] SẴN SÀNG. Gắn container vào tuyến này bằng:"
  echo "  docker run ... --network=container:${t} <image> ..."
}

down_all() {
  echo "[CLEANUP] Xoá toàn bộ tuyến..."
  local i=1
  for _ in "${UPSTREAMS[@]}"; do
    cleanup_route "$i"
    rm -f "resolv_${i}.conf" || true
    ((i++))
  done
  echo "[DONE] Đã xoá."
}

status_all() {
  local i=1
  for _ in "${UPSTREAMS[@]}"; do
    local t="${TUN_NAME_BASE}${i}"
    if docker ps --format '{{.Names}}' | grep -qx "$t"; then
      printf "[STATUS] %s " "$t"
      docker run --rm --network=container:"$t" curlimages/curl:latest -s https://ifconfig.me || true
    else
      echo "[STATUS] $t: not running"
    fi
    ((i++))
  done
}

# ===================== CLI =====================
# ./script.sh          -> khởi chạy tất cả tuyến
# ./script.sh status   -> in IP từng tuyến
# ./script.sh down     -> xoá toàn bộ tuyến
case "${1:-up}" in
  up)
    i=1
    for up in "${UPSTREAMS[@]}"; do
      start_route "$i" "$up"
      ((i++))
    done
    echo
    echo "✅ ĐÃ KHỞI TẠO ${#UPSTREAMS[@]} TUYẾN."
    echo "👉 Gắn container client vào tuyến N:  --network=container:tunN"
    ;;
  status)
    status_all
    ;;
  down)
    down_all
    ;;
  *)
    echo "Usage: $0 [up|status|down]"
    exit 1
    ;;
esac
